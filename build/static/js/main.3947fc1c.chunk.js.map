{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleimportance","important","content","onClick","base_url","axios","get","then","response","data","newObject","post","id","put","App","prop","useState","notes","setNotes","newNote","setNewNotes","showAll","setShowAll","notesToShow","filter","useEffect","noteService","initialNotes","map","i","toggleImportance","find","n","changedNote","returnedNote","catch","error","alert","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"uJAgBeA,EAdF,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,KAAKC,EAAoB,EAApBA,iBACFD,EAAKE,UAGnB,OACI,+BACKF,EAAKG,QACN,wBAAQC,QAASH,Q,gBCPvBI,EAAU,kCAiBF,EAfC,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa/B,EAVC,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAEA,EAASC,SAQ7B,EALA,SAACG,EAAGF,GAEd,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,UAA+BM,GAChCH,MAAK,SAAAC,GAAQ,OAAEA,EAASC,SCwE5BK,EA/EH,SAACC,GAET,MAA0BC,mBAASD,EAAKE,OAAxC,mBAAOA,EAAP,KAAcC,EAAd,KAEA,EAA+BF,mBAAS,IAAxC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEA,EAA6BJ,oBAAS,GAAtC,mBAAOK,EAAP,KAAeC,EAAf,KAEMC,EAAcF,EAAUJ,EACTA,EAAMO,QAAO,SAAAzB,GAAI,OAAqB,IAAnBA,EAAKE,aAQ7CwB,qBAAU,WACNC,IAECnB,MAAK,SAAAoB,GACFT,EAASS,QAEf,IAiCF,OACI,gCACI,uCACA,yBAAQxB,QAAS,kBAAImB,GAAYD,IAAjC,kBACUA,EAAU,YAAY,SAEhC,6BACCE,EAAYK,KAAI,SAAC7B,EAAM8B,GAAP,OACb,cAAC,EAAD,CAEI9B,KAAMA,EACN+B,iBAAkB,kBA1CR,SAAClB,GACvB,IAAMb,EAAOkB,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAEpB,KAAOA,KAChCqB,EAAW,2BAAOlC,GAAP,IAAYE,WAAWF,EAAKE,YAC7CyB,EACQd,EAAGqB,GACV1B,MAAK,SAAA2B,GACFhB,EAASD,EAAMW,KAAI,SAAA7B,GAAI,OAAEA,EAAKa,KAAOA,EAAKb,EAAKmC,SAElDC,OAAM,SAAAC,GACHC,MAAM,aAAD,OAActC,EAAKG,QAAnB,sCAELgB,EAASD,EAAMO,QAAO,SAAAQ,GAAC,OAAEA,EAAEpB,KAAOA,SA+BF0B,CAAmBvC,EAAKa,MAF3CiB,QAMb,uBAAMU,SA9BE,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAY,CACdxC,QAAQiB,EACRwB,MAAK,IAAIC,MAAOC,cAChB5C,UAAU6C,KAAKC,SAAW,IAE9BrB,EACQgB,GACPnC,MAAK,SAAA2B,GACFhB,EAASD,EAAM+B,OAAOd,IACtBd,EAAY,QAmBZ,UACI,uBAAO6B,MAAO9B,EAAS+B,SA7Dd,SAACV,GAClBW,QAAQC,IAAIZ,EAAMa,OAAOJ,OACzB7B,EAAYoB,EAAMa,OAAOJ,UA4DjB,wBAAQK,KAAK,SAAb,yBCxDhBC,IAASC,OAAO,cAAC,EAAD,CAAKvC,MAtBP,CACV,CACEL,GAAI,EACJV,QAAS,eACTyC,KAAM,2BACN1C,WAAW,GAEb,CACEW,GAAI,EACJV,QAAS,sCACTyC,KAAM,2BACN1C,WAAW,GAEb,CACEW,GAAI,EACJV,QAAS,+DACTyC,KAAM,2BACN1C,WAAW,MAOjBwD,SAASC,eAAe,W","file":"static/js/main.3947fc1c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({note,toggleimportance})=>{\n    const label = note.important\n    ? 'make not important':'make important'\n\n    return(\n        <li>\n            {note.content}\n            <button onClick={toggleimportance}></button>\n        \n        </li>\n    )\n}\n\n\nexport default Note;\n\n\n\n","import axios from 'axios'\n\nconst base_url ='http://localhost:3001/api/notes'\n\nconst getAll = () =>{\n    const request = axios.get(base_url)\n    return request.then(response => response.data)\n}\n\nconst create = newObject =>{\n    const request = axios.post(base_url,newObject)\n    return request.then(response=>response.data)\n}\n\nconst update =(id,newObject)=>{\n    const request = axios.put(`${base_url}/{$id}`, newObject)\n    return request.then(response=>response.data)\n}\n\nexport default{getAll,create,update}","import React,{useEffect, useState} from 'react'\n\nimport Note from './components/Note'\n\nimport noteService from './services/notes'\n\n\n\n\nconst App = (prop)=>{\n    \n    const [notes, setNotes] = useState(prop.notes)\n\n    const [newNote, setNewNotes] = useState('')\n\n    const [showAll,setShowAll] = useState(true)\n\n    const notesToShow = showAll ? notes\n                        :notes.filter(note=>note.important === true)\n\n    const handleChange = (event)=>{\n        console.log(event.target.value)\n        setNewNotes(event.target.value)\n    }\n\n\n    useEffect(()=>{\n        noteService\n        .getAll()\n        .then(initialNotes=>{\n            setNotes(initialNotes)\n        })\n    },[])\n\n    const toggleImportanceOf =(id)=>{\n        const note = notes.find(n => n.id === id)\n        const changedNote = {...note,important:!note.important}        \n        noteService\n        .update(id,changedNote)\n        .then(returnedNote =>{\n            setNotes(notes.map(note=>note.id !== id ? note:returnedNote))\n        })\n        .catch(error =>{\n            alert(`the note '${note.content}' was already deleted from server`\n            )\n            setNotes(notes.filter(n=>n.id !== id))\n        })\n    }\n\n\n    const addNote = (event)=>{\n        event.preventDefault()\n        const noteObject ={\n            content:newNote,\n            date:new Date().toISOString(),\n            important:Math.random() < 0.5\n        }\n        noteService\n        .create(noteObject)\n        .then(returnedNote=>{\n            setNotes(notes.concat(returnedNote))\n            setNewNotes('')\n        })\n    }\n\n    return(\n        <div>\n            <h1>Notes</h1>\n            <button onClick={()=>setShowAll(!showAll)}>\n                show {showAll ? 'important':'all'}\n            </button>\n            <ul>\n            {notesToShow.map((note, i) => \n                <Note\n                    key={i}\n                    note={note} \n                    toggleImportance={() => toggleImportanceOf(note.id)}\n                />\n            )}\n            </ul>\n            <form onSubmit={addNote}>\n                <input value={newNote} onChange={handleChange}/>\n                <button type=\"submit\">save</button>\n            </form>\n        </div>\n    )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nconst notes = [\n    {\n      id: 1,\n      content: 'HTML is easy',\n      date: '2019-05-30T17:30:31.098Z',\n      important: true\n    },\n    {\n      id: 2,\n      content: 'Browser can execute only JavaScript',\n      date: '2019-05-30T18:39:34.091Z',\n      important: false\n    },\n    {\n      id: 3,\n      content: 'GET and POST are the most important methods of HTTP protocol',\n      date: '2019-05-30T19:20:14.298Z',\n      important: true\n    }\n  ]\n  \n  \nReactDOM.render(<App notes={notes}/>,\n\ndocument.getElementById('root'));\n\n\n"],"sourceRoot":""}